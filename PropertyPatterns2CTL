#TRANSLATION RULES: "pattern-id" , "pattern structure", "translated pattern"
"Comparator" , "< | > | <= | >= | == | !=" , "$a1$"
"Variable-temp1" , "PRP:Component::", "$a1$"
"Variable-temp1" , "G", ""
"Variable-temp1" , "L", ""
"Variable" , "<Variable-temp1> , PRP:hasVariableName::", "$a1$"
"Port" , "PRP:Component:: , OoSSA:Port::", "$a1$.$2"
#"Mode-Change" , "mode changes for , PRP:Component:: , from , PRP:Mode:: , to , PRP:Mode:: ", ""
#"Mode-list" , "PRP:Mode::", "" 
#"Mode-list" , "PRP:Mode:: , <Mode-list>" , ""  


# >=1 dependency from previous or this group
"Interaction" , "<Port>" , "$a1$" 
"Interaction" , "interaction of ( , <Port> , <Interaction> , )" , "$a2$ & $a3$"
"Port-list" , "<Port>" , "$a1$"
"Port-list" , "<Port> , <Port-list>" , "$a1$ & $a2;separator=" & "$"
"Interaction-list" , "<Interaction>" , "$a1$"
"Interaction-list" , "<Interaction> , <Interaction-list>" , "$a1$ & $a2;separator=" & "$"
#Function := PRP:hasFunctionName:: , <Variable> , PRP:hasFunctionBody::
"Evaluation" , "PRP:Expression::", "($a1$)"
"Evaluation" , "<Variable>", "$a1$"
"Evaluation" , "PRP:LiteralValue::", "$a1$"
#Evaluation := <Function>
#Local-definition := PRP:hasVariableName , := , <Evaluation>
"Closed-interval-left" , "[" , ">="
"Closed-interval-right" , "]" , "<="
"Open-interval-left" , "(" , ">"
"Open-interval-right" , ")" , "<" 
"Interval-left" , "<Closed-interval-left>" , "$a1$"
"Interval-left" , "<Open-interval-left>" , "$a1$"
"Interval-right" , "<Closed-interval-right>" , "$a1$"
"Interval-right" , "<Open-interval-right>" , "$a1$"
"Interval" , "<Interval-left> , <Evaluation> , <Evaluation>, <Interval-right>", "$variable$ $a1$ $a2$ & $variable$ $a3$ $a4$"
"Time-Interval" , "<Interval> , ns | ms | s", "$a1$"
"Quant-Interval" , "<Interval> , uomvocab:UnitOfMeasurement::", "$a1$"

# >2 dependencies from previous groups OR >=1 dependencies from this group
"Logic-Expression", "<Evaluation> , in , <Interval>", "$a3$(variable=$a1$)"
"Logic-Expression", "<Evaluation> , <Comparator> , <Evaluation>", "($a1$ $a2$ $a3$)"
"Prop-Change" , "<Logic-Expression> , becomes true" , " (X $a1$ )"
"Proposition" , "PRP:Component:: , is in , PRP:Mode::" , " $a1$.inMode($a2$)"
"Proposition" , "<Logic-Expression> , holds", "$a1$"
"Event-Temp1" , "<Interaction>", "$a1$"
"Event-Temp1" , "<Port>", "$a1$"
"Event-Temp1" , "<Mode-Change>", "$a1$"
"Event-Temp1" , "<Prop-Change>", "$a1$"
"Simple-Beh-Times" , "once" , ""
"Simple-Beh-Times" , "<Interval> , times" , ""
"Simple-Beh-Dur" , "" , ""
"Simple-Beh-Dur" , "eventually" , "AF"
"Simple-Beh-Dur" , "during , <Time-Interval>" , ""
"Simple-Beh" , "RBLP:Event:: , occurs | does not occur, <Simple-Beh-Times> , <Simple-Beh-Dur>" , "$a4$ $a1$"
"Simple-Beh" , "PRP:Proposition:: , during , <Time-Interval>" , "$a1$" 
"Beh-Operator" , "AND | OR | SEQ" , "$if(1)$ & $else$$if(2)$ | $endif$$endif$" 
"Beh" , "<Simple-Beh>" , "$a1$"
"Beh" , "<Beh> , <Beh-Operator> , <Beh>" , "($a1$ $a2$ $a3$)"
"Beh" , "<Beh> , let , <Local-definition>" , "$a1$"

"PRP:F1" , "Whenever, <Beh>, then, <Beh>" , "AG ( $a2$ ->  $a4$ )"
"PRP:F2" , "Always , <Beh>" , "AG ( $a2$ )"
"Beh" , "<Simple-Beh>" , "<Simple-Beh>"
"Beh" , "<Beh> , <Beh-Operator> , <Beh>", "($a1$ $a2$ $a3$)"
"Beh" , "<Beh> , let , <Local-definition>", "$a1$"
