group BIPArchitecture;


OperandPackage( name )::=<<PackOpB_$name$>>
OperandName(name)::=<<OpB_$name$>>

OperandsComposition( operandsB )::=<<
package MutexOperands
  
use PortConnTypes
$ operandsB : {  use $OperandPackage(name=it.name)$ } ;separator="\n" $

compound type MutexOperands()
	$ operandsB : {  component $OperandPackage(name=it.name)$ . $OperandName(name=it.name)$   $it.name$()  } ;separator="\n" $ 
end

end
 >>
 
 
 
 
 PortConnTypes()::=<<
 package PortConnTypes
 
 	port type BeginPort()
	port type FinishPort()
	
end
>>
 
 OperandB( name )::=<<
 package $OperandPackage(name=name)$
 
 use PortConnTypes
 
 	atom type $OperandName(name=name)$()
		
		export port PortConnTypes.BeginPort begin()
		export port PortConnTypes.FinishPort finish()

		place work, sleep
		initial to sleep	

		on begin from sleep to work	
		on finish from work to sleep
	end
	
end
 >>
  
 
AEConfInstance( path, operandsB )::=<<
path:$path$
operands:{ B $operandsB :{ $it.name$ };separator="," $ }
ports:{B.begin $beginPorts(operandsB=operandsB)$},{B.finish $finishPorts(operandsB=operandsB)$}
>>

beginPorts(operandsB)::=<<$operandsB :{ $it.name$.begin }$ >>
finishPorts(operandsB)::=<<$operandsB :{ $it.name$.finish }$ >>